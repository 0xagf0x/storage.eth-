{"ast":null,"code":"var _jsxFileName = \"/Users/charlesbuckley/solidity/faucet/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [web3API, setWeb3API] = useState({\n    provider: null,\n    web3: null\n  });\n  useEffect(() => {\n    const loadProvider = async () => {\n      // with metamask, we have access to window.ethereum & window.web3\n      // metamask injects a global API into the website \n      // this API allows websites to request users, accounts, read data to blockchain\n      // sign messages and transactions\n      console.log(window.web3);\n      console.log(window.ethereum);\n      let provider;\n\n      if (window.ethereum) {\n        provider = window.ethereum;\n\n        try {\n          await provider.enable(); // enable metamask\n        } catch {\n          console.error('User denied accout access');\n        }\n      } else if (window.web3) {\n        provider = window.web3.currentProvider;\n      } else if (!process.env.production) {\n        provider = new Web3.providers.HttpProvider('http://localhost:7545');\n      }\n\n      setWeb3API({\n        web3: new Web3(provider),\n        provider\n      });\n    };\n\n    loadProvider();\n  }, []);\n  console.log(web3API.web3);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"faucet-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"faucet\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance-view is-size-2\",\n        children: [\"Current Balance: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 28\n        }, this), \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn mr-2\",\n        onClick: async () => {\n          const accounts = await window.ethereum.request({\n            method: \"eth_requestAccounts\"\n          });\n          console.log(accounts);\n        },\n        children: \"Enable Ethereum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn mr-2\",\n        children: \"Donate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ebNgO1OffBq/gK77oSHnmqBKXqA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/charlesbuckley/solidity/faucet/src/App.js"],"names":["React","useEffect","useState","Web3","App","web3API","setWeb3API","provider","web3","loadProvider","console","log","window","ethereum","enable","error","currentProvider","process","env","production","providers","HttpProvider","accounts","request","method"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC;AACrCK,IAAAA,QAAQ,EAAE,IAD2B;AAErCC,IAAAA,IAAI,EAAE;AAF+B,GAAD,CAAtC;AAMAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,YAAY,GAAG,YAAY;AAC/B;AACA;AACA;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACJ,IAAnB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,QAAnB;AAEA,UAAIN,QAAJ;;AAGA,UAAIK,MAAM,CAACC,QAAX,EAAqB;AACnBN,QAAAA,QAAQ,GAAGK,MAAM,CAACC,QAAlB;;AAEA,YAAG;AACD,gBAAMN,QAAQ,CAACO,MAAT,EAAN,CADC,CACwB;AAC1B,SAFD,CAEE,MAAM;AACNJ,UAAAA,OAAO,CAACK,KAAR,CAAc,2BAAd;AACD;AAEF,OATD,MASO,IAAIH,MAAM,CAACJ,IAAX,EAAiB;AACtBD,QAAAA,QAAQ,GAAGK,MAAM,CAACJ,IAAP,CAAYQ,eAAvB;AACD,OAFM,MAEA,IAAI,CAACC,OAAO,CAACC,GAAR,CAAYC,UAAjB,EAA6B;AAClCZ,QAAAA,QAAQ,GAAG,IAAIJ,IAAI,CAACiB,SAAL,CAAeC,YAAnB,CAAgC,uBAAhC,CAAX;AACD;;AAEDf,MAAAA,UAAU,CAAC;AACTE,QAAAA,IAAI,EAAE,IAAIL,IAAJ,CAASI,QAAT,CADG;AAETA,QAAAA;AAFS,OAAD,CAAV;AAID,KA9BD;;AAgCAE,IAAAA,YAAY;AACb,GAlCQ,EAkCN,EAlCM,CAAT;AAoCAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,OAAO,CAACG,IAApB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,qDACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADnB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAA6B,QAAA,OAAO,EAAG,YAAY;AACjD,gBAAMc,QAAQ,GAAG,MAAMV,MAAM,CAACC,QAAP,CAAgBU,OAAhB,CAAwB;AAACC,YAAAA,MAAM,EAAE;AAAT,WAAxB,CAAvB;AACAd,UAAAA,OAAO,CAACC,GAAR,CAAYW,QAAZ;AACD,SAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAQE;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA7DQlB,G;;KAAAA,G;AA+DT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport Web3 from 'web3';\n\n\nfunction App() {\n\n  const [web3API, setWeb3API] = useState({\n    provider: null,\n    web3: null,\n  }) \n\n\n  useEffect(() => {\n    const loadProvider = async () => {\n      // with metamask, we have access to window.ethereum & window.web3\n      // metamask injects a global API into the website \n      // this API allows websites to request users, accounts, read data to blockchain\n      // sign messages and transactions\n      console.log(window.web3);\n      console.log(window.ethereum);\n\n      let provider;\n\n\n      if (window.ethereum) {\n        provider = window.ethereum;\n\n        try{\n          await provider.enable()  // enable metamask\n        } catch {\n          console.error('User denied accout access')\n        }\n\n      } else if (window.web3) {\n        provider = window.web3.currentProvider;\n      } else if (!process.env.production) {\n        provider = new Web3.providers.HttpProvider('http://localhost:7545')\n      }\n\n      setWeb3API({\n        web3: new Web3(provider),\n        provider\n      })\n    }\n\n    loadProvider();\n  }, [])\n\n  console.log(web3API.web3)\n\n  return (\n    <div className=\"faucet-wrapper\">\n      <div className=\"faucet\">\n        <div className=\"balance-view is-size-2\">\n          Current Balance: <strong>10</strong> ETH\n        </div>\n        <button className=\"btn mr-2\" onClick={ async () => {\n          const accounts = await window.ethereum.request({method: \"eth_requestAccounts\"});\n          console.log(accounts)\n        }}>Enable Ethereum</button>\n        <button className=\"btn mr-2\">Donate</button>\n        <button className=\"btn\">Withdraw</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}