{"ast":null,"code":"var _jsxFileName = \"/Users/charlesbuckley/solidity/faucet/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport './App.css';\nimport Web3 from 'web3';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { loadContract } from './utils/loadContract'; // import this function \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [web3API, setWeb3API] = useState({\n    provider: null,\n    web3: null,\n    contract: null\n  });\n  const [balance, setBalance] = useState(null);\n  const [accounts, setAccount] = useState(null);\n  useEffect(() => {\n    const loadBalance = async () => {\n      const {\n        contract,\n        web3\n      } = web3API;\n      const balance = await web3.eth.getBalance(contract.address);\n      setBalance(web3.utils.fromWei(balance, 'ether')); // console.log(balance, 'balance')\n    };\n\n    web3API.contract && loadBalance();\n  }, [web3API]);\n  useEffect(() => {\n    const loadProvider = async () => {\n      // with metamask, we have access to window.ethereum & window.web3\n      // metamask injects a global API into the website \n      // this API allows websites to request users, accounts, read data to blockchain\n      // sign messages and transactions\n      //* console.log(window.web3);\n      //* console.log(window.ethereum);\n      // connect to provider\n      const provider = await detectEthereumProvider();\n      const contract = await loadContract('Faucet', provider);\n\n      if (provider) {\n        const chainID = await provider.request({\n          // legacy providers may only have ethereum.sendAsync\n          method: 'eth_chainId'\n        });\n      } else {\n        console.log('no provider found');\n      }\n\n      console.log(contract); // create new instance of web3\n\n      setWeb3API({\n        web3: new Web3(provider),\n        provider,\n        contract\n      });\n    };\n\n    loadProvider();\n  }, []); // console.log(web3API.web3);\n\n  useEffect(() => {\n    const getAccounts = async () => {\n      const accounts = await web3API.web3.eth.getAccounts(); // gets array of accounts \n\n      setAccount(accounts[0]);\n    };\n\n    if (web3API.web3) {\n      getAccounts(); // getAccounts() will only be initialized when you have web3API object\n    }\n  }, [web3API.web3]);\n  const addFunds = useCallback(async () => {\n    const {\n      contract,\n      web3\n    } = web3API;\n    await contract.addFunds({\n      // this func is being called from FaucetContract.sol\n      from: accounts,\n      value: web3.utils.toWei('1', 'ether') // must be 1 ETH\n\n    });\n  }, [web3API, accounts]);\n\n  const withdrawFunds = async amount => {\n    const {\n      contract,\n      web3\n    } = web3API;\n    await contract.withdraw({\n      // this func is being called from FaucetContract.sol\n      from: contract\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"faucet-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"faucet\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"is-flex is-align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mr-2\",\n          children: \"Account: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", accounts ? accounts : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button is-small is-link\",\n            onClick: async () => {\n              const accounts = await window.ethereum.request({\n                method: \"eth_requestAccounts\"\n              });\n            },\n            children: \"Connect Metamask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance-view is-size-2 mb-4\",\n        children: [\"Current Balance: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: balance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 28\n        }, this), \"ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-primary mr-2\",\n        onClick: addFunds,\n        children: \"Donate 1 ETH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-link\",\n        children: \"Withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qqwMwW6sHSncZr6ZZYJfAPuZxWI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/charlesbuckley/solidity/faucet/src/App.js"],"names":["React","useEffect","useState","useCallback","Web3","detectEthereumProvider","loadContract","App","web3API","setWeb3API","provider","web3","contract","balance","setBalance","accounts","setAccount","loadBalance","eth","getBalance","address","utils","fromWei","loadProvider","chainID","request","method","console","log","getAccounts","addFunds","from","value","toWei","withdrawFunds","amount","withdraw","window","ethereum"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport './App.css';\nimport Web3 from 'web3';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { loadContract } from './utils/loadContract';  // import this function \n\nfunction App() {\n\n  const [web3API, setWeb3API] = useState({\n    provider: null,\n    web3: null,\n    contract: null,\n  }) \n\n  const [balance, setBalance] = useState(null);\n  const [accounts, setAccount] = useState(null);\n\n  useEffect(() => {\n    const loadBalance = async () => {\n     \n      const { contract, web3 } = web3API;\n      const balance = await web3.eth.getBalance(contract.address);\n      setBalance(web3.utils.fromWei(balance, 'ether'));\n      // console.log(balance, 'balance')\n    } \n\n    web3API.contract && loadBalance()\n  }, [web3API])\n\n  useEffect(() => {\n    const loadProvider = async () => {\n      // with metamask, we have access to window.ethereum & window.web3\n      // metamask injects a global API into the website \n      // this API allows websites to request users, accounts, read data to blockchain\n      // sign messages and transactions\n\n      //* console.log(window.web3);\n      //* console.log(window.ethereum);\n      \n      // connect to provider\n      const provider = await detectEthereumProvider();\n      const contract  = await loadContract('Faucet', provider);\n      if (provider) {\n        const chainID = await provider.request({ // legacy providers may only have ethereum.sendAsync\n          method: 'eth_chainId'\n        })\n      } else {\n        console.log('no provider found')\n      }\n\n      console.log(contract)\n\n      // create new instance of web3\n      setWeb3API({\n        web3: new Web3(provider),\n        provider,\n        contract,\n      })\n    }\n\n    loadProvider();\n  }, [])\n  // console.log(web3API.web3);\n\n  useEffect(() => {\n    const getAccounts = async () => {\n      const accounts = await web3API.web3.eth.getAccounts();  // gets array of accounts \n      setAccount(accounts[0])\n    }\n\n    if (web3API.web3) {\n      getAccounts()  // getAccounts() will only be initialized when you have web3API object\n    }\n  }, [web3API.web3])\n\n  const addFunds = useCallback(async () => {\n    const { contract, web3 } = web3API;\n    await contract.addFunds({  // this func is being called from FaucetContract.sol\n      from: accounts,\n      value: web3.utils.toWei('1', 'ether')  // must be 1 ETH\n    })\n  }, [web3API, accounts])\n\n\n  const withdrawFunds = async (amount) => {\n    const { contract, web3 } = web3API; \n    await contract.withdraw({  // this func is being called from FaucetContract.sol\n      from: contract,\n    })\n  }\n\n  \n\n  return (\n    <div className=\"faucet-wrapper\">\n      <div className=\"faucet\">\n        <div className=\"is-flex is-align-items-center\">\n          <span className=\"mr-2\">Account: </span>\n          <h1> {accounts ?  accounts \n          : \n          <button className=\"button is-small is-link\" onClick={ async () => {\n            const accounts = await window.ethereum.request({method: \"eth_requestAccounts\"});\n          }}>\n            Connect Metamask\n          </button>\n          }</h1>\n        </div>\n        <div className=\"balance-view is-size-2 mb-4\">\n          Current Balance: <strong>{balance}</strong>ETH\n        </div>\n        <button className=\"button is-primary mr-2\" onClick={addFunds}>Donate 1 ETH</button>\n        <button className=\"button is-link\">Withdraw</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}